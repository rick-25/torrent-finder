{"version":3,"sources":["components/SearchBar.js","components/Form.js","components/Row.js","components/ResultBox.js","components/Loader.js","components/Popup.js","App.js","index.js"],"names":["SearchBar","props","id","src","alt","type","placeholder","name","onChange","e","syncInputValue","target","value","Form","data","onClick","executeSearch","className","Row","sendIndex","size","ResultBox","resultRef","useRef","useLayoutEffect","current","scrollIntoView","torrentData","Rows","map","ele","index","title","ref","console","log","searchKey","Loader","Popup","hidePopup","href","magnetLink","class","App","clickedRow","setState","selectedRow","state","inputValue","endpoint","newsearchKey","this","apiCall","key","getSearchUrl","fetch","then","res","json","catch","error","alert","showPopup","onKeyUp","event","magnet","style","filter","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qTAkBeA,MAhBf,SAAmBC,GAClB,OACC,sBAAKC,GAAG,aAAR,UACE,qBACCC,IAAI,qBACJC,IAAI,WAEL,uBACCC,KAAK,OACLC,YAAY,+BACZC,KAAK,YACLC,SAAU,SAACC,GAAD,OAAOR,EAAMS,eAAeD,EAAEE,OAAOC,cCGrCC,MAZf,SAAcZ,GACb,OACC,sBAAKC,GAAG,OAAR,UACC,6BAAK,kBACL,cAAC,EAAD,CAAWQ,eAAgB,SAACI,GAAD,OAAUb,EAAMS,eAAeI,MAC1D,wBAAQC,QAAS,kBAAMd,EAAMe,iBAA7B,SACC,mBAAGC,UAAU,uB,MCCFC,MATf,SAAajB,GACZ,OACC,qBAAIc,QAAS,kBAAMd,EAAMkB,UAAUlB,EAAMC,KAAzC,UACC,6BAAKD,EAAMM,OACX,6BAAKN,EAAMmB,WCqCCC,MAtCf,SAAmBpB,GAEf,IAAMqB,EAAYC,mBAElBC,2BAAgB,WACVF,EAAUG,SACRH,EAAUG,QAAQC,gBAAe,KAEtC,CAACzB,EAAM0B,cAEV,IAAIC,EAAQ3B,EAAM0B,YAAYE,KAAI,SAACC,EAAKC,GACpC,OACI,cAAC,EAAD,CACIxB,KAAMuB,EAAIE,MACVZ,KAAMU,EAAIV,KACVlB,GAAI6B,EAEJZ,UAAW,SAACY,GAAD,OAAW9B,EAAMkB,UAAUY,KADjCA,MAMjB,OACI,sBAAK7B,GAAG,aAAa+B,IAAKX,EAA1B,UACI,qBAAKL,UAAU,SAASF,QAAS,kBAAMmB,QAAQC,IAAI,oBAAnD,SACI,kCAAKlC,EAAMmC,eAEf,qBAAKnB,UAAU,UAAf,SACI,gCACI,gCACKW,Y,MC3BVS,MANf,SAAgBpC,GACf,OACC,qBAAKgB,UAAU,Y,MCWFqB,MAZf,SAAerC,GACX,OACI,qBAAKgB,UAAU,cAAcF,QAAS,kBAAMd,EAAMsC,aAAlD,SACI,qBAAKtB,UAAU,QAAf,SACI,mBAAGuB,KAAMvC,EAAMwC,WAAY9B,OAAO,SAAlC,SACI,mBAAG+B,MAAM,0BCgGdC,E,kDAhDX,WAAY1C,GAAQ,IAAD,8BACf,cAAMA,IATV2C,WAAa,SAACb,GACV,EAAKc,SAAS,CACVC,YAAaf,KAQjB,EAAKgB,MAAQ,CACTC,WAAY,KACZZ,UAAW,KACXT,YAAa,MAEjB,EAAKsB,SAAW,GAPD,E,kDAzCnB,SAAeC,GACXC,KAAKN,SAAS,CAAEG,WAAYE,M,2BAGhC,WAAiB,IAAD,OACZC,KAAKN,SACD,CACIT,UAAWe,KAAKJ,MAAMC,WACtBrB,YAAa,OAEjB,kBAAM,EAAKyB,e,qBAMnB,WAAW,IAAD,OACAC,EAAMF,KAAKJ,MAAMX,UACvBF,QAAQC,IAAIgB,KAAKG,aAAaH,KAAKF,SAAUI,IAC7CE,MAAMJ,KAAKG,aAAaH,KAAKF,SAAUI,IAClCG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA1C,GAAI,OAAI,EAAK+B,SAAS,CAAElB,YAAab,OAC1C6C,OAAM,SAACC,GACJ,EAAKf,SAAS,CAACT,UAAW,KAAMT,YAAa,OAC7CkC,MAAMD,Q,0BAGlB,SAAaX,EAAUI,GACnB,MAAM,GAAN,OAAUJ,EAAV,sBAAgCI,K,oBAuBpC,WAAU,IAAD,OAICS,EAAwC,MAA1BX,KAAKJ,MAAMD,aAAwBK,KAAKJ,MAAMpB,YAElE,OACI,sBACIV,UAAU,MACV8C,QAAS,SAACC,GAA8B,UAAdA,EAAMX,KAAiB,EAAKrC,iBAF1D,UAKS8C,EACG,cAAC,EAAD,CACIrB,WAAYU,KAAKJ,MAAMpB,YAAYwB,KAAKJ,MAAMD,aAAamB,OAC3D1B,UAAW,kBAAM,EAAKM,SAAS,CAAEC,YAAa,UAEhD,KAEV,sBAAKoB,MAAOJ,EAlBF,CACdK,OAAQ,aAiBgC,KAApC,UACI,cAAC,EAAD,CACIzD,eAAgB,SAAC2C,GAAD,OAAS,EAAK3C,eAAe2C,IAAMrC,cAAe,kBAAM,EAAKA,mBAG5EmC,KAAKJ,MAAMpB,YACR,cAAC,EAAD,CACIS,UAAWe,KAAKJ,MAAMX,UACtBT,YAAawB,KAAKJ,MAAMpB,YACxBR,UAAW,SAACY,GAAD,OAAW,EAAKa,WAAWb,MAEvCoB,KAAKJ,MAAMX,UAAa,cAAC,EAAD,IAAa,e,GApFlDgC,IAAMC,WCPxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.df901393.chunk.js","sourcesContent":["import '../styles/SearchBar.css'\r\n\r\nfunction SearchBar(props) {\r\n\treturn (\r\n\t\t<div id=\"search-bar\">\r\n\t\t\t\t<img \r\n\t\t\t\t\tsrc=\"./search-solid.svg\"\r\n\t\t\t\t\talt=\"Search\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tplaceholder=\"Enter torrent name e.g Gta V\" \r\n\t\t\t\t\tname=\"searchkey\" \r\n\t\t\t\t\tonChange={(e) => props.syncInputValue(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default SearchBar;","import '../styles/Form.css';\r\nimport SearchBar from './SearchBar';\r\n\r\n//Form component\r\nfunction Form(props) {\r\n\treturn (\r\n\t\t<div id=\"form\">\r\n\t\t\t<h1>{\"TorrentFinder\"}</h1>\r\n\t\t\t<SearchBar syncInputValue={(data) => props.syncInputValue(data)}/>\r\n\t\t\t<button onClick={() => props.executeSearch()}>\r\n\t\t\t\t<i className=\"fa fa-send-o\"></i>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Form;","\r\n\r\nfunction Row(props) {\r\n\treturn (\r\n\t\t<tr onClick={() => props.sendIndex(props.id)}>\r\n\t\t\t<td>{props.name}</td>\r\n\t\t\t<td>{props.size}</td>\r\n\t\t</tr>\r\n\t);\r\n}\r\n\r\nexport default Row;","import { useLayoutEffect, useRef } from 'react';\r\nimport '../styles/ResultBox.css'\r\nimport Row from './Row';\r\n\r\n\r\nfunction ResultBox(props) {\r\n\r\n    const resultRef = useRef();\r\n\r\n    useLayoutEffect(() => {\r\n       if(resultRef.current) {\r\n            resultRef.current.scrollIntoView(true);\r\n       }\r\n    }, [props.torrentData]);\r\n\r\n    let Rows =  props.torrentData.map((ele, index) => {\r\n        return (\r\n            <Row\r\n                name={ele.title}\r\n                size={ele.size}\r\n                id={index}\r\n                key={index}\r\n                sendIndex={(index) => props.sendIndex(index)}\r\n            />\r\n        );\r\n    });\r\n    \r\n    return (\r\n        <div id=\"result-box\" ref={resultRef}>\r\n            <div className=\"header\" onClick={() => console.log('Header clicked!')}>\r\n                <p>#{props.searchKey}</p>\r\n            </div>\r\n            <div className=\"results\">\r\n                <table>\r\n                    <tbody>\r\n                        {Rows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultBox;","import '../styles/Loader.css';\r\n\r\nfunction Loader(props) {\r\n\treturn (\r\n\t\t<div className=\"loader\"></div>\r\n\t)\r\n}\r\n\r\nexport default Loader;","\r\nimport '../styles/Popup.css';\r\n\r\nfunction Popup(props) {\r\n    return (\r\n        <div className=\"popup-panel\" onClick={() => props.hidePopup()}>\r\n            <div className=\"popup\">\r\n                <a href={props.magnetLink} target=\"_blank\">\r\n                    <i class=\"fa fa-download\"></i>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Popup;","\r\n\r\nimport React from 'react';\r\n\r\nimport Form from './components/Form';\r\nimport ResultBox from './components/ResultBox';                 \r\nimport Loader from './components/Loader';\r\nimport Popup from './components/Popup';\r\n\r\n\r\n\r\n//Statefull class component\r\nclass App extends React.Component {\r\n\r\n    //Sync value of components's state with input field \r\n    syncInputValue(newsearchKey) {\r\n        this.setState({ inputValue: newsearchKey });\r\n    }\r\n\r\n    executeSearch() {\r\n        this.setState (\r\n            {\r\n                searchKey: this.state.inputValue,\r\n                torrentData: null\r\n            },\r\n            () => this.apiCall()\r\n        )\r\n    }\r\n\r\n\r\n    //AJAX  api call for torrent data\r\n    apiCall() {\r\n        const key = this.state.searchKey;\r\n        console.log(this.getSearchUrl(this.endpoint, key));\r\n        fetch(this.getSearchUrl(this.endpoint, key))\r\n            .then(res => res.json())\r\n            .then(data => this.setState({ torrentData: data }))\r\n            .catch((error) => {\r\n                this.setState({searchKey: null, torrentData: null});\r\n                alert(error);\r\n            })\r\n    }\r\n    getSearchUrl(endpoint, key) {\r\n        return `${endpoint}search?key=${key}`;\r\n    }\r\n\r\n\r\n    //Recives the index of row which uder clicked for download\r\n    clickedRow = (index) => {\r\n        this.setState({\r\n            selectedRow: index\r\n        });\r\n    }\r\n\r\n\r\n    //Component class constructor\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputValue: null,\r\n            searchKey: null,\r\n            torrentData: null\r\n        };\r\n        this.endpoint = \"\";\r\n    }\r\n\r\n    render() {\r\n        const blurStyle = {\r\n            filter: 'blur(5px)'\r\n        };\r\n        const showPopup = ((this.state.selectedRow != null) && this.state.torrentData);\r\n\r\n        return (\r\n            <div\r\n                className=\"app\"\r\n                onKeyUp={(event) => { if (event.key === 'Enter') this.executeSearch(); }}\r\n            >\r\n                {\r\n                    (showPopup) ?\r\n                        <Popup\r\n                            magnetLink={this.state.torrentData[this.state.selectedRow].magnet}\r\n                            hidePopup={() => this.setState({ selectedRow: null })}\r\n                        />\r\n                        : null\r\n                }\r\n                <div style={showPopup ? blurStyle : null} >\r\n                    <Form\r\n                        syncInputValue={(key) => this.syncInputValue(key)} executeSearch={() => this.executeSearch()}\r\n                    />\r\n                    {\r\n                        (this.state.torrentData) ?\r\n                            <ResultBox\r\n                                searchKey={this.state.searchKey}\r\n                                torrentData={this.state.torrentData}\r\n                                sendIndex={(index) => this.clickedRow(index)}\r\n                            />\r\n                            : (this.state.searchKey) ? <Loader /> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}